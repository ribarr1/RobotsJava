package com.greensqa.ctifcarga.test;
import java.io.IOException;
import java.sql.SQLException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import com.greensqa.ctifcarga.ral.*;
import com.greensqa.ctifcarga.util.*;
import com.jcraft.jsch.JSchException;

import java.util.Random;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args ) throws SQLException, IOException, IllegalAccessException, JSchException
    {
    	Properties parametros = new Properties();
    	parametros.load(new FileInputStream(
          "C:\\Users\\CarolinaLeal\\eclipse-workspace\\ctifcarga\\src\\main\\java\\com\\greensqa\\ctifcarga\\properties\\ParametrosIniciales.properties"));
    	String cantidadregistros = parametros.getProperty("cantidadregistros");
    	String entidad = parametros.getProperty("entidad");
    	String rutalinux = parametros.getProperty("rutalinux");
    	System.out.println(rutalinux);
    	
    	Random rnd = new Random();
    	Catalogos dato = new Catalogos();
    	DateFormat hourdateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
    	Date date = new Date();
    	//String cantidadregistros = "3";  //cantidad de registros a insertar en las tablas
    	
    	
    	TablaClientesEntidadesRal EjecutarClientesEntidadesRal = new TablaClientesEntidadesRal();
    	TablaClientesCalificacionesRal EjecutarClientesCalificacionesRal = new TablaClientesCalificacionesRal();
    	TablaClientesStuacionesRal EjecutarClientesStuacionesRal = new TablaClientesStuacionesRal();
    	ArchivoClientesEntidadesRal GenerarArchivoClientesEntidades = new ArchivoClientesEntidadesRal();
    	ArchivoControlRal GenerarArchivoControl = new ArchivoControlRal();
    	ArchivoClientesCalificacionesRal GenerarArchivoClientesCalificaciones = new ArchivoClientesCalificacionesRal();
    	
    	
    	
    	String [] arreglo = new String[6];
    	arreglo[0] = String.valueOf(1000 + (rnd.nextInt(9999 + 1) - 1000));  //tanda
    	//arreglo[1] = dato.getCod_Entidad();   //entidad
    	arreglo[1] = entidad;
    	arreglo[2] = hourdateFormat.format(date);  //fechahora
    	arreglo[3] = cantidadregistros;   // Cantidad de registros a insertar en las tablas
    	arreglo[4] = dato.getCod_Legado(arreglo[1]);
    	arreglo[5] = rutalinux;
    	
    	
    	
    //	System.out.println(arreglo[0]+arreglo[1]+hourdateFormat.format(date));
    //	System.out.println(dato.getCod_EstadoCliente());
    	
    	
   // 	System.out.println("Hora y fecha: "+hourdateFormat.format(date));
    	
    	
    	//EjecutarClientesEntidadesRal.main(arreglo);
    	//EjecutarClientesCalificacionesRal.main(null);
    	//EjecutarClientesStuacionesRal.main(null);
    	//GenerarArchivoClientesEntidades.main(arreglo);
    	GenerarArchivoClientesCalificaciones.main(arreglo);
    	//ArchivoControlRal.main(arreglo);
    	
    	
    	/*
        TablaContratoTipoBienLeasingRal EjecutarContratoTipoBienLeasingRal = new TablaContratoTipoBienLeasingRal();
        EjecutarContratoTipoBienLeasingRal.main(null);*/
        
        //FabricaPojos estructura = new FabricaPojos();
        //estructura.createPOJOS();
        
    }
}
